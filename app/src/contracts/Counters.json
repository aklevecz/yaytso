{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"methods\":{},\"title\":\"Counters\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]}},\"version\":1}",
  "bytecode": "0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209678a57d3ad34c3e9c64b9aeab304388bbb0f31287e3b6e9c743cd8ecb76320064736f6c63430006020033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209678a57d3ad34c3e9c64b9aeab304388bbb0f31287e3b6e9c743cd8ecb76320064736f6c63430006020033",
  "sourceMap": "670:848:15:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "670:848:15:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../math/SafeMath.sol\";\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts/utils/Counters.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        2711
      ]
    },
    "id": 2712,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2664,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 2665,
        "nodeType": "ImportDirective",
        "scope": 2712,
        "sourceUnit": 1273,
        "src": "66:30:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 2711,
        "linearizedBaseContracts": [
          2711
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2668,
            "libraryName": {
              "contractScope": null,
              "id": 2666,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1272,
              "src": "699:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1272",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "693:27:15",
            "typeName": {
              "id": 2667,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "712:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 2671,
            "members": [
              {
                "constant": false,
                "id": 2670,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2671,
                "src": "1065:14:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2669,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1065:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 2711,
            "src": "726:374:15",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2681,
              "nodeType": "Block",
              "src": "1180:38:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2678,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "1197:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2670,
                    "src": "1197:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2677,
                  "id": 2680,
                  "nodeType": "Return",
                  "src": "1190:21:15"
                }
              ]
            },
            "documentation": null,
            "id": 2682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2673,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2682,
                  "src": "1123:23:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2672,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2671,
                    "src": "1123:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1122:25:15"
            },
            "returnParameters": {
              "id": 2677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2682,
                  "src": "1171:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1170:9:15"
            },
            "scope": 2711,
            "src": "1106:112:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2693,
              "nodeType": "Block",
              "src": "1277:125:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2684,
                        "src": "1376:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2689,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2670,
                      "src": "1376:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1394:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1376:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2692,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:19:15"
                }
              ]
            },
            "documentation": null,
            "id": 2694,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2684,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2694,
                  "src": "1243:23:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2683,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2671,
                    "src": "1243:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1242:25:15"
            },
            "returnParameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:0:15"
            },
            "scope": 2711,
            "src": "1224:178:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2709,
              "nodeType": "Block",
              "src": "1461:55:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2699,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "1471:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2701,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2670,
                      "src": "1471:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1507:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2702,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2696,
                            "src": "1488:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 2703,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2670,
                          "src": "1488:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1127,
                        "src": "1488:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1488:21:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1471:38:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2708,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:38:15"
                }
              ]
            },
            "documentation": null,
            "id": 2710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2696,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2710,
                  "src": "1427:23:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2695,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2671,
                    "src": "1427:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1426:25:15"
            },
            "returnParameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:0:15"
            },
            "scope": 2711,
            "src": "1408:108:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2712,
        "src": "670:848:15"
      }
    ],
    "src": "33:1486:15"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        2711
      ]
    },
    "id": 2712,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2664,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 2665,
        "nodeType": "ImportDirective",
        "scope": 2712,
        "sourceUnit": 1273,
        "src": "66:30:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 2711,
        "linearizedBaseContracts": [
          2711
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2668,
            "libraryName": {
              "contractScope": null,
              "id": 2666,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1272,
              "src": "699:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1272",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "693:27:15",
            "typeName": {
              "id": 2667,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "712:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 2671,
            "members": [
              {
                "constant": false,
                "id": 2670,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2671,
                "src": "1065:14:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2669,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1065:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 2711,
            "src": "726:374:15",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2681,
              "nodeType": "Block",
              "src": "1180:38:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2678,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "1197:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2670,
                    "src": "1197:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2677,
                  "id": 2680,
                  "nodeType": "Return",
                  "src": "1190:21:15"
                }
              ]
            },
            "documentation": null,
            "id": 2682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2673,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2682,
                  "src": "1123:23:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2672,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2671,
                    "src": "1123:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1122:25:15"
            },
            "returnParameters": {
              "id": 2677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2682,
                  "src": "1171:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1170:9:15"
            },
            "scope": 2711,
            "src": "1106:112:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2693,
              "nodeType": "Block",
              "src": "1277:125:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2684,
                        "src": "1376:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2689,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2670,
                      "src": "1376:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1394:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1376:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2692,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:19:15"
                }
              ]
            },
            "documentation": null,
            "id": 2694,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2684,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2694,
                  "src": "1243:23:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2683,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2671,
                    "src": "1243:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1242:25:15"
            },
            "returnParameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:0:15"
            },
            "scope": 2711,
            "src": "1224:178:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2709,
              "nodeType": "Block",
              "src": "1461:55:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2699,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "1471:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2701,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2670,
                      "src": "1471:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1507:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2702,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2696,
                            "src": "1488:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 2703,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2670,
                          "src": "1488:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1127,
                        "src": "1488:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1488:21:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1471:38:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2708,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:38:15"
                }
              ]
            },
            "documentation": null,
            "id": 2710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2696,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2710,
                  "src": "1427:23:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2695,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2671,
                    "src": "1427:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2671_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1426:25:15"
            },
            "returnParameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:0:15"
            },
            "scope": 2711,
            "src": "1408:108:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2712,
        "src": "670:848:15"
      }
    ],
    "src": "33:1486:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2021-05-27T05:35:23.591Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "methods": {},
    "title": "Counters"
  },
  "userdoc": {
    "methods": {}
  }
}